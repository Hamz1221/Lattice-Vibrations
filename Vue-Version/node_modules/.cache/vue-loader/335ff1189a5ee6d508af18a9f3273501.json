{"remainingRequest":"/Users/darrenlean/Documents/Visualisations/Lattice-Vibrations/Vue-Version/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/darrenlean/Documents/Visualisations/Lattice-Vibrations/Vue-Version/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/darrenlean/Documents/Visualisations/Lattice-Vibrations/Vue-Version/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/darrenlean/Documents/Visualisations/Lattice-Vibrations/Vue-Version/src/Page4.vue?vue&type=template&id=033b00dc&","dependencies":[{"path":"/Users/darrenlean/Documents/Visualisations/Lattice-Vibrations/Vue-Version/src/Page4.vue","mtime":1597922028127},{"path":"/Users/darrenlean/Documents/Visualisations/Lattice-Vibrations/Vue-Version/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/darrenlean/Documents/Visualisations/Lattice-Vibrations/Vue-Version/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/darrenlean/Documents/Visualisations/Lattice-Vibrations/Vue-Version/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/darrenlean/Documents/Visualisations/Lattice-Vibrations/Vue-Version/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkgewogIHZhciBfdm0gPSB0aGlzCiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgcmV0dXJuIF9jKAogICAgImRpdiIsCiAgICB7IGF0dHJzOiB7IGlkOiAiYXBwIiB9IH0sCiAgICBbCiAgICAgIF9jKCJpdi10aXRsZS1iYXIiLCBbX3ZtLl92KCIgTGF0dGljZSBWaWJyYXRpb25zIC0gVGhyZWUgRGltZW5zaW9uYWwgIildKSwKICAgICAgX2MoIml2LXZpc3VhbGlzYXRpb24iLCB7CiAgICAgICAgYXR0cnM6IHsgaG90c3BvdENvbHVtbkhlaWdodDogIjEwMHB4IiB9LAogICAgICAgIHNjb3BlZFNsb3RzOiBfdm0uX3UoWwogICAgICAgICAgewogICAgICAgICAgICBrZXk6ICJob3RzcG90cyIsCiAgICAgICAgICAgIGZuOiBmdW5jdGlvbigpIHsKICAgICAgICAgICAgICByZXR1cm4gWwogICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICJpdi1wYW5lIiwKICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgIHN0YXRpY1N0eWxlOiB7ICJvdmVyZmxvdy15IjogInNjcm9sbCIgfSwKICAgICAgICAgICAgICAgICAgICBhdHRyczogeyBwb3NpdGlvbjogImxlZnQiLCBmb3JtYXQ6ICJwdXNoIiB9CiAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgICBfYygicCIsIFsKICAgICAgICAgICAgICAgICAgICAgIF92bS5fdigKICAgICAgICAgICAgICAgICAgICAgICAgIiBGaW5hbGx5LCB3ZSBsb29rIGF0IGEgdGhyZWUgZGltZW5zaW9uYWwgaW5maW5pdGUgY3J5c3RhbCBsYXR0aWNlLiBUaGlzIHNpbXVsYXRpb24gaXMgbWVhbnQgZm9yIGNvbXBsZXRlbmVzcy4gVGhlIGNvbG91ciBjb2RpbmcgaGVyZSBpcyB0byB0cmFjayBsYXllcnMgb2YgYXRvbXMuIElmIHRoaXMgbG9va3MgY29uZnVzaW5nIGZvciB5b3UsIHlvdSBtYXkgd2lzaCB0byByZXR1cm4gdG8gdGhlIHR3byBkaW1lbnNpb25hbCBjYXNlIGFzIGl0IGVuY29tcGFzc2VzIGFsbCB0aGUgZXNzZW50aWFscyBvZiBwaHlzaWNzIGludm9sdmVkLiAiCiAgICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICAgICAicCIsCiAgICAgICAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdigiQSByZW1pbmRlciBvZiB0aGUgZ2VuZXJhbCBzb2x1dGlvbjogIiksCiAgICAgICAgICAgICAgICAgICAgICAgIF9jKCJpdi1lcXVhdGlvbi1ib3giLCB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxpc2U6IHRydWUsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlcXVhdGlvbjoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIlxcdGV4dGJme3V9X24odCkgPSBSZSBcXHN1bV97XFx0ZXh0YmZ7a319XFx0aWxkZXtcXHRleHRiZnt1fX1fXFx0ZXh0YmZ7a30gZV57aShcXHRleHRiZntrfSBcXGNkb3QgXFx0ZXh0YmZ7Un1fbiAtIFxcb21lZ2FfXFx0ZXh0YmZ7a30gdCl9IgogICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgfSksCiAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdigiIEZvciBhIHNpbmdsZSAiKSwKICAgICAgICAgICAgICAgICAgICAgICAgX2MoIml2LWVxdWF0aW9uLWJveCIsIHsKICAgICAgICAgICAgICAgICAgICAgICAgICBhdHRyczogeyBzdHlsaXNlOiBmYWxzZSwgZXF1YXRpb246ICJcXHRleHRiZntrfSIgfQogICAgICAgICAgICAgICAgICAgICAgICB9KSwKICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KCI6ICIpLAogICAgICAgICAgICAgICAgICAgICAgICBfYygiaXYtZXF1YXRpb24tYm94IiwgewogICAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsaXNlOiB0cnVlLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgZXF1YXRpb246CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJcXHRleHRiZnt1fV9uKHQpID0gXFx0ZXh0YmZ7dX1fayBcXGNvcyhcXHRleHRiZntrfSBcXGNkb3QgXFx0ZXh0YmZ7Un1fbi1cXG9tZWdhX2sgdCkiCiAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICB9KSwKICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KCIgRm9yIGFueSBnaXZlbiAiKSwKICAgICAgICAgICAgICAgICAgICAgICAgX2MoIml2LWVxdWF0aW9uLWJveCIsIHsKICAgICAgICAgICAgICAgICAgICAgICAgICBhdHRyczogeyBzdHlsaXNlOiBmYWxzZSwgZXF1YXRpb246ICJcXHRleHRiZntrfSIgfQogICAgICAgICAgICAgICAgICAgICAgICB9KSwKICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KCI6ICIpLAogICAgICAgICAgICAgICAgICAgICAgICBfYygiaXYtZXF1YXRpb24tYm94IiwgewogICAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsaXNlOiB0cnVlLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgZXF1YXRpb246CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJcXG9tZWdhXjJfe1xcbWF0aGJme2t9fSA9IDQgXFxvbWVnYV4yX0QgXFxsZWZ0WyBcXHNpbl4yIFxcbGVmdChcXGZyYWN7a194IGF9ezJ9IFxccmlnaHQpICsgXFxzaW5eMiBcXGxlZnQoXFxmcmFje2tfeSBhfXsyfSBcXHJpZ2h0KSArIFxcc2luXjIgXFxsZWZ0KFxcZnJhY3trX3ogYX17Mn0gXFxyaWdodCkgXFxyaWdodF0iCiAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICB9KSwKICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KAogICAgICAgICAgICAgICAgICAgICAgICAgICIgd2hlcmUgYWxsIHRoZSBzeW1ib2xzIGhhdmUgdGhlIHNhbWUgbWVhbmluZ3MgYXMgYmVmb3JlLiAiCiAgICAgICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAgICAgICAxCiAgICAgICAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAgICJwIiwKICAgICAgICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KAogICAgICAgICAgICAgICAgICAgICAgICAgICIgVGhlIHR5cGVzIG9mIHdhdmVzIGF2YWlsYWJsZSBhcmUgc3RpbGwgbG9uZ2l0dWRpbmFsLCB0cmFuc3ZlcnNlIG9yIGEgY29tYmluYXRpb24gb2YgYm90aC4gVGhpcyBpcyBpbmRpY2F0ZWQgYnkgIgogICAgICAgICAgICAgICAgICAgICAgICApLAogICAgICAgICAgICAgICAgICAgICAgICBfYygiaXYtZXF1YXRpb24tYm94IiwgewogICAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsaXNlOiBmYWxzZSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVxdWF0aW9uOiAifFxcdGV4dGJme2t9IFxcY2RvdCBcXHRleHRiZnt1fV9rfCIKICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoIiBhbmQgIiksCiAgICAgICAgICAgICAgICAgICAgICAgIF9jKCJpdi1lcXVhdGlvbi1ib3giLCB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxpc2U6IGZhbHNlLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgZXF1YXRpb246ICJ8XFx0ZXh0YmZ7a30gXFx0aW1lcyBcXHRleHRiZnt1fV9rfCIKICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoIi4gIikKICAgICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAgICAgICAxCiAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgICAgICApLAogICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICJpdi10b2dnbGUtaG90c3BvdCIsCiAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgICAgICAgaWQ6ICJpdi10b2dnbGUtaG90c3BvdC1ib3R0b20iLAogICAgICAgICAgICAgICAgICAgICAgcG9zaXRpb246ICJib3R0b20iLAogICAgICAgICAgICAgICAgICAgICAgdGl0bGU6ICJTbGlkZXJzIgogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAgICAgImRpdiIsCiAgICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAib3ZlcmFsbC1zbGlkZXJzLWNvbnRhaW5lciIsCiAgICAgICAgICAgICAgICAgICAgICAgIHN0YXRpY1N0eWxlOiB7IGZsb2F0OiAibGVmdCIgfQogICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJ0ZXh0IHNlY3Rpb24tYm9keSBvZGQiIH0sIFsKICAgICAgICAgICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAgICAgICAgICJkaXYiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgeyBzdGF0aWNTdHlsZTogeyB3aWR0aDogIjEwMCUiLCBmbG9hdDogImxlZnQiIH0gfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImxhYmVsIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7IHN0YXRpY0NsYXNzOiAic2xpZGVyLWxhYmVsIiB9LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9jKCJpdi1lcXVhdGlvbi1ib3giLCB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IHN0eWxpc2U6IGZhbHNlLCBlcXVhdGlvbjogImRfeCIgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSksCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoIjogIiksCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfYygic3BhbiIsIHsgYXR0cnM6IHsgaWQ6ICJkeC1kaXNwbGF5IiB9IH0sIFsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KCIwLjUiKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDEKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoImxhYmVsIiwgeyBzdGF0aWNDbGFzczogInNsaWRlciIgfSwgWwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9jKCJzcGFuIiwgeyBzdGF0aWNDbGFzczogInNsaWRlck1pbiIgfSwgWwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KCItMSIpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoImlucHV0IiwgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJpbnB1dHMiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWQ6ICJkeCIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1heDogIjEiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtaW46ICItMSIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6ICJyIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RlcDogIjAuMDEiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiAicmFuZ2UiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogIjAuNSIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfYygic3BhbiIsIHsgc3RhdGljQ2xhc3M6ICJzbGlkZXJNYXgiIH0sIFsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdigiMSIpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJsYWJlbCIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgeyBzdGF0aWNDbGFzczogInNsaWRlci1sYWJlbCIgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfYygiaXYtZXF1YXRpb24tYm94IiwgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhdHRyczogeyBzdHlsaXNlOiBmYWxzZSwgZXF1YXRpb246ICJkX3kiIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KCI6ICIpLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoInNwYW4iLCB7IGF0dHJzOiB7IGlkOiAiZHktZGlzcGxheSIgfSB9LCBbCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdigiMCIpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBdKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgMQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICApLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfYygibGFiZWwiLCB7IHN0YXRpY0NsYXNzOiAic2xpZGVyIiB9LCBbCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoInNwYW4iLCB7IHN0YXRpY0NsYXNzOiAic2xpZGVyTWluIiB9LCBbCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoIi0xIikKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfYygiaW5wdXQiLCB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogImlucHV0cyIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZDogImR5IiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWF4OiAiMSIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1pbjogIi0xIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogInIiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGVwOiAiMC4wMSIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6ICJyYW5nZSIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiAiMCIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfYygic3BhbiIsIHsgc3RhdGljQ2xhc3M6ICJzbGlkZXJNYXgiIH0sIFsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdigiMSIpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJsYWJlbCIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgeyBzdGF0aWNDbGFzczogInNsaWRlci1sYWJlbCIgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfYygiaXYtZXF1YXRpb24tYm94IiwgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhdHRyczogeyBzdHlsaXNlOiBmYWxzZSwgZXF1YXRpb246ICJkX3oiIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KCI6ICIpLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoInNwYW4iLCB7IGF0dHJzOiB7IGlkOiAiZHotZGlzcGxheSIgfSB9LCBbCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdigiMCIpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBdKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgMQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICApLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfYygibGFiZWwiLCB7IHN0YXRpY0NsYXNzOiAic2xpZGVyIiB9LCBbCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoInNwYW4iLCB7IHN0YXRpY0NsYXNzOiAic2xpZGVyTWluIiB9LCBbCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoIi0xIikKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfYygiaW5wdXQiLCB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogImlucHV0cyIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZDogImR6IiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWF4OiAiMSIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1pbjogIi0xIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogInIiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGVwOiAiMC4wMSIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6ICJyYW5nZSIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiAiMCIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfYygic3BhbiIsIHsgc3RhdGljQ2xhc3M6ICJzbGlkZXJNYXgiIH0sIFsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdigiMSIpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJsYWJlbCIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgeyBzdGF0aWNDbGFzczogInNsaWRlci1sYWJlbCIgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfYygiaXYtZXF1YXRpb24tYm94IiwgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxpc2U6IGZhbHNlLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVxdWF0aW9uOiAidV97a194fSIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSksCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoIjogIiksCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfYygic3BhbiIsIHsgYXR0cnM6IHsgaWQ6ICJ1a3gtZGlzcGxheSIgfSB9LCBbCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdigiMCIpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBdKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgMQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICApLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfYygibGFiZWwiLCB7IHN0YXRpY0NsYXNzOiAic2xpZGVyIiB9LCBbCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoInNwYW4iLCB7IHN0YXRpY0NsYXNzOiAic2xpZGVyTWluIiB9LCBbCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoIi0xIikKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfYygiaW5wdXQiLCB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogImlucHV0cyIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZDogInVreCIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1heDogIjEiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtaW46ICItMSIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6ICJyIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RlcDogIjAuMDEiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiAicmFuZ2UiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogIjAiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSksCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoInNwYW4iLCB7IHN0YXRpY0NsYXNzOiAic2xpZGVyTWF4IiB9LCBbCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoIjEiKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF0pCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAibGFiZWwiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsgc3RhdGljQ2xhc3M6ICJzbGlkZXItbGFiZWwiIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoIml2LWVxdWF0aW9uLWJveCIsIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsaXNlOiBmYWxzZSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlcXVhdGlvbjogInVfe2tfeX0iCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KCI6ICIpLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoInNwYW4iLCB7IGF0dHJzOiB7IGlkOiAidWt5LWRpc3BsYXkiIH0gfSwgWwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoIjAiKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDEKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoImxhYmVsIiwgeyBzdGF0aWNDbGFzczogInNsaWRlciIgfSwgWwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9jKCJzcGFuIiwgeyBzdGF0aWNDbGFzczogInNsaWRlck1pbiIgfSwgWwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KCItMSIpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoImlucHV0IiwgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJpbnB1dHMiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWQ6ICJ1a3kiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtYXg6ICIxIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWluOiAiLTEiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiAiciIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0ZXA6ICIwLjAxIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogInJhbmdlIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6ICIwIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9jKCJzcGFuIiwgeyBzdGF0aWNDbGFzczogInNsaWRlck1heCIgfSwgWwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KCIxIikKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBdKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImxhYmVsIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7IHN0YXRpY0NsYXNzOiAic2xpZGVyLWxhYmVsIiB9LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9jKCJpdi1lcXVhdGlvbi1ib3giLCB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGlzZTogZmFsc2UsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZXF1YXRpb246ICJ1X3trX3p9IgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdigiOiAiKSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9jKCJzcGFuIiwgeyBhdHRyczogeyBpZDogInVrei1kaXNwbGF5IiB9IH0sIFsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KCIwLjUiKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDEKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoImxhYmVsIiwgeyBzdGF0aWNDbGFzczogInNsaWRlciIgfSwgWwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9jKCJzcGFuIiwgeyBzdGF0aWNDbGFzczogInNsaWRlck1pbiIgfSwgWwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KCItMSIpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoImlucHV0IiwgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJpbnB1dHMiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWQ6ICJ1a3oiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtYXg6ICIxIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWluOiAiLTEiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiAiciIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0ZXA6ICIwLjAxIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogInJhbmdlIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6ICIwLjUiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSksCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoInNwYW4iLCB7IHN0YXRpY0NsYXNzOiAic2xpZGVyTWF4IiB9LCBbCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoIjEiKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF0pCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF0pCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgICAgICAgICBdKQogICAgICAgICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgIF0KICAgICAgICAgICAgfSwKICAgICAgICAgICAgcHJveHk6IHRydWUKICAgICAgICAgIH0sCiAgICAgICAgICB7CiAgICAgICAgICAgIGtleTogIm1haW4tc3RhZ2UiLAogICAgICAgICAgICBmbjogZnVuY3Rpb24oKSB7CiAgICAgICAgICAgICAgcmV0dXJuIFsKICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAiZGl2IiwKICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICAgICAgICAgICAgICAgICB3aWR0aDogIjUwdnciLAogICAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiAiNTB2dyIsCiAgICAgICAgICAgICAgICAgICAgICBmbG9hdDogImxlZnQiLAogICAgICAgICAgICAgICAgICAgICAgIm1hcmdpbi1yaWdodCI6ICIyJSIsCiAgICAgICAgICAgICAgICAgICAgICAibWFyZ2luLXRvcCI6ICIzJSIKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IGlkOiAibWFpbi12aXMiIH0KICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgW19jKCJjYW52YXMiLCB7IGF0dHJzOiB7IGlkOiAiY2FudmFzLWRpdiIgfSB9KV0KICAgICAgICAgICAgICAgICksCiAgICAgICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNTdHlsZTogeyBmbG9hdDogImxlZnQiIH0gfSwgWwogICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAiZGl2IiwKICAgICAgICAgICAgICAgICAgICB7IHN0YXRpY1N0eWxlOiB7IHdpZHRoOiAiNTAlIiwgZmxvYXQ6ICJsZWZ0IiB9IH0sCiAgICAgICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAgICAgX2MoIml2LWVxdWF0aW9uLWJveCIsIHsKICAgICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsaXNlOiBmYWxzZSwKICAgICAgICAgICAgICAgICAgICAgICAgICBlcXVhdGlvbjoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICJcXHRleHRiZntrfSA9IFxcZnJhY3tcXHBpfXthfSBcXGJlZ2lue2JtYXRyaXh9IGRfeCBcXFxcIGRfeSBcXFxcIGRfeiBcXGVuZHtibWF0cml4fSIKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgICAgIDEKICAgICAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICAgImRpdiIsCiAgICAgICAgICAgICAgICAgICAgeyBzdGF0aWNTdHlsZTogeyB3aWR0aDogIjUwJSIsIGZsb2F0OiAibGVmdCIgfSB9LAogICAgICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgICAgIF9jKCJpdi1lcXVhdGlvbi1ib3giLCB7CiAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGlzZTogZmFsc2UsCiAgICAgICAgICAgICAgICAgICAgICAgICAgZXF1YXRpb246CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAiXFx0ZXh0YmZ7a30gXFxjZG90IFxcdGV4dGJme3V9X1xcdGV4dGJme2t9ID0gIgogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICB9KSwKICAgICAgICAgICAgICAgICAgICAgIF9jKCJzcGFuIiwgeyBhdHRyczogeyBpZDogImRvdHByb2R1Y3QiIH0gfSwgWwogICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoIiAxMjMgIikKICAgICAgICAgICAgICAgICAgICAgIF0pCiAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICAgICAxCiAgICAgICAgICAgICAgICAgICksCiAgICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAgICJkaXYiLAogICAgICAgICAgICAgICAgICAgIHsgc3RhdGljU3R5bGU6IHsgd2lkdGg6ICI1MCUiLCBmbG9hdDogImxlZnQiIH0gfSwKICAgICAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICAgICBfYygiaXYtZXF1YXRpb24tYm94IiwgewogICAgICAgICAgICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxpc2U6IGZhbHNlLAogICAgICAgICAgICAgICAgICAgICAgICAgIGVxdWF0aW9uOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgIlxcdGV4dGJme2t9IFxcdGltZXMgXFx0ZXh0YmZ7dX1fXFx0ZXh0YmZ7a30gPSAiCiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgICAgICAgICAgX2MoInNwYW4iLCB7IGF0dHJzOiB7IGlkOiAiY3Jvc3Nwcm9kdWN0IiB9IH0sIFsKICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KCIgNDU2ICIpCiAgICAgICAgICAgICAgICAgICAgICBdKQogICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAgICAgMQogICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICBdKQogICAgICAgICAgICAgIF0KICAgICAgICAgICAgfSwKICAgICAgICAgICAgcHJveHk6IHRydWUKICAgICAgICAgIH0KICAgICAgICBdKQogICAgICB9KQogICAgXSwKICAgIDEKICApCn0KdmFyIHN0YXRpY1JlbmRlckZucyA9IFtdCnJlbmRlci5fd2l0aFN0cmlwcGVkID0gdHJ1ZQoKZXhwb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfQ=="}]}